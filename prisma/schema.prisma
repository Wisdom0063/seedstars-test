// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model CustomerSegment {
  id        String   @id @default(cuid())
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  personas          Persona[]
  valuePropositions ValueProposition[]

  @@map("customer_segments")
}

model Persona {
  id          String   @id @default(cuid())
  name        String
  age         Int?
  gender      String?
  location    String?
  education   String?
  incomePerMonth String?
  
  // Pain Points
  painPoints  String?  // JSON array of pain points
  
  // Purchasing Behavior
  purchasingBehavior String? // JSON object with purchasing details
  
  // Channels
  channels    String?  // JSON array of preferred channels
  
  // Quote/Description
  quote       String?
  description String?
  
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // Reference to customer segment
  segmentId   String
  segment     CustomerSegment @relation(fields: [segmentId], references: [id], onDelete: Cascade)

  // Value propositions linked to this persona
  valuePropositions ValueProposition[]

  @@map("personas")
}

model ValueProposition {
  id          String   @id @default(cuid())
  tags        String?  // JSON array of tags
  
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  createdBy   String?

  // Link to Customer Segment/Persona
  segmentId String
  segment   CustomerSegment @relation(fields: [segmentId], references: [id], onDelete: Cascade)

  personaId String?
  persona   Persona? @relation(fields: [personaId], references: [id], onDelete: Cascade)

  // Value Proposition Canvas Components as JSON strings
  customerJobs     String? // JSON array of customer jobs
  customerPains    String? // JSON array of customer pains
  gainCreators     String? // JSON array of gain creators
  painRelievers    String? // JSON array of pain relievers
  productsServices String? // JSON array of products/services

  // Value Proposition Statements
  valuePropositionStatements ValuePropositionStatement[]

  @@map("value_propositions")
}

model ValuePropositionStatement {
  id          String @id @default(cuid())
  offering    String // What we offer
  description String // How we deliver value

  // Link to Value Proposition
  valuePropositionId String
  valueProposition   ValueProposition @relation(fields: [valuePropositionId], references: [id], onDelete: Cascade)

  // Business models linked to this value proposition statement
  businessModels BusinessModel[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt @default(now())

  @@map("value_proposition_statements")
}

model BusinessModel {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  valuePropositionStatementId String
  valuePropositionStatement   ValuePropositionStatement @relation(fields: [valuePropositionStatementId], references: [id], onDelete: Cascade)

  // Business Model Canvas components as JSON strings
  keyPartners           String? // JSON array
  keyActivities         String? // JSON array
  keyResources          String? // JSON array
  customerRelationships String? // JSON array
  channels              String? // JSON array
  customerSegments      String? // JSON array
  costStructure         String? // JSON array
  revenueStreams        String? // JSON array

  tags  String? // JSON array
  notes String?

  @@map("business_models")
}

model View {
  id          String  @id @default(cuid())
  name        String
  description String?
  isDefault   Boolean @default(false)

  // View source - what type of data this view displays
  source ViewSource

  // View configuration
  layout ViewLayout @default(CARD)

  // Filters (JSON)
  filters String? // JSON object with filter criteria

  // Active user selections (JSON)
  activeFilters String? // JSON object with current active filter selections
  activeSorts   String? // JSON array with current active sort selections

  // Sorting
  sortBy    String?
  sortOrder SortOrder @default(ASC)

  // Grouping
  groupBy String? // Field to group by

  // Visible columns/fields (JSON array)
  visibleFields String? // JSON array of field names
  
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@map("views")
}

enum ViewSource {
  PERSONAS
  VALUE_PROPOSITIONS
  BUSINESS_MODELS
}

enum ViewLayout {
  CARD
  TABLE
  KANBAN
}

enum SortOrder {
  ASC
  DESC
}

// Value Proposition Enums
enum ValuePropositionStatus {
  DRAFT
  ACTIVE
  ARCHIVED
}

enum JobImportance {
  VERY_IMPORTANT
  FAIRLY_IMPORTANT
  NOT_IMPORTANT
}

enum JobCategory {
  FUNCTIONAL
  EMOTIONAL
  SOCIAL
}

enum PainSeverity {
  EXTREME_PAIN
  MODERATE_PAIN
  LOW_PAIN
}

enum PainCategory {
  UNDESIRED_OUTCOMES
  OBSTACLES
  RISKS
}

enum GainPriority {
  VERY_ESSENTIAL
  FAIRLY_ESSENTIAL
  NOT_ESSENTIAL
}

enum GainCategory {
  REQUIRED_GAINS
  EXPECTED_GAINS
  DESIRED_GAINS
  UNEXPECTED_GAINS
}

enum RelieverPriority {
  VERY_ESSENTIAL
  FAIRLY_ESSENTIAL
  NOT_ESSENTIAL
}

enum RelieverCategory {
  PAIN_KILLER
  GAIN_CREATOR
  VITAMIN
}

enum ProductType {
  PRODUCT
  SERVICE
  DIGITAL
  PHYSICAL
}
